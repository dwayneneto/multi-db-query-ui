{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\netod\\\\Desktop\\\\mysql-mcp-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // // src/App.js\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n\n// // export default function App() {\n// //   const [schema, setSchema] = useState(\"\");\n// //   const [prompt, setPrompt] = useState(\"\");\n// //   const [response, setResponse] = useState(null);\n// //   const [sql, setSql] = useState(\"\");\n\n// //   const handleSubmit = async () => {\n// //     const res = await axios.post(\"http://localhost:8000/query\", { schema, prompt });\n// //     setSql(res.data.sql);\n// //     setResponse(res.data.result);\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Prompt to SQL</h2>\n// //       <input placeholder=\"Schema\" value={schema} onChange={(e) => setSchema(e.target.value)} />\n// //       <input placeholder=\"Prompt\" value={prompt} onChange={(e) => setPrompt(e.target.value)} />\n// //       <button onClick={handleSubmit}>Submit</button>\n// //       {sql && <pre>{sql}</pre>}\n// //       {response && <table><thead><tr>{response.columns.map(c => <th>{c}</th>)}</tr></thead><tbody>{response.rows.map(row => <tr>{row.map(cell => <td>{cell}</td>)}</tr>)}</tbody></table>}\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function App() {\n//   const [schema, setSchema] = useState(\"\");\n//   const [prompt, setPrompt] = useState(\"\");\n//   const [sql, setSql] = useState(\"\");\n//   const [manualSQL, setManualSQL] = useState(\"\");\n//   const [response, setResponse] = useState(null);\n\n//   const handlePromptSubmit = async () => {\n//     try {\n//       const res = await axios.post(\"http://localhost:8000/query\", {\n//         schema,\n//         prompt,\n//       });\n//       setSql(res.data.sql);\n//       setResponse(res.data.result);\n//     } catch (err) {\n//       alert(\"Error: \" + err.response?.data?.error || err.message);\n//     }\n//   };\n\n//   const handleManualSubmit = async () => {\n//     try {\n//       const res = await axios.post(\"http://localhost:8000/manual-query\", {\n//         sql: manualSQL,\n//       });\n//       setSql(manualSQL);\n//       setResponse(res.data.result);\n//     } catch (err) {\n//       alert(\"Error: \" + err.response?.data?.error || err.message);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2>üîç Prompt to SQL</h2>\n//       <input\n//         placeholder=\"Schema (e.g. users(id,name,email))\"\n//         value={schema}\n//         onChange={(e) => setSchema(e.target.value)}\n//         style={{ width: \"80%\", marginBottom: 10 }}\n//       />\n//       <br />\n//       <input\n//         placeholder=\"Enter your prompt\"\n//         value={prompt}\n//         onChange={(e) => setPrompt(e.target.value)}\n//         style={{ width: \"80%\", marginBottom: 10 }}\n//       />\n//       <br />\n//       <button onClick={handlePromptSubmit}>Submit Prompt</button>\n\n//       <h2 style={{ marginTop: 40 }}>üìù Run Manual SQL</h2>\n//       <input\n//         placeholder=\"Enter SQL (e.g. SELECT * FROM users)\"\n//         value={manualSQL}\n//         onChange={(e) => setManualSQL(e.target.value)}\n//         style={{ width: \"80%\", marginBottom: 10 }}\n//       />\n//       <br />\n//       <button onClick={handleManualSubmit}>Run SQL</button>\n\n//       {sql && (\n//         <div style={{ marginTop: 20 }}>\n//           <h4>Generated SQL:</h4>\n//           <pre>{sql}</pre>\n//         </div>\n//       )}\n\n//       {response && (\n//         <div>\n//           <h4>Result:</h4>\n//           <table border=\"1\" cellPadding=\"5\">\n//             <thead>\n//               <tr>\n//                 {response.columns.map((col, idx) => (\n//                   <th key={idx}>{col}</th>\n//                 ))}\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {response.rows.map((row, i) => (\n//                 <tr key={i}>\n//                   {row.map((cell, j) => (\n//                     <td key={j}>{cell}</td>\n//                   ))}\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [dbType, setDbType] = useState(\"mysql\");\n  const [schema, setSchema] = useState(\"\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [manualSQL, setManualSQL] = useState(\"\");\n  const [collection, setCollection] = useState(\"\");\n  const [mongoQuery, setMongoQuery] = useState(\"{}\");\n  const [result, setResult] = useState(null);\n  const [sql, setSql] = useState(\"\");\n  const backend = \"http://localhost:8000\";\n  const handlePromptSubmit = async () => {\n    try {\n      let res;\n      if (dbType === \"mysql\") {\n        res = await axios.post(`${backend}/query`, {\n          prompt,\n          schema\n        });\n      } else if (dbType === \"postgres\") {\n        res = await axios.post(`${backend}/postgres-nl-query`, {\n          prompt,\n          schema\n        });\n      } else if (dbType === \"mongo\") {\n        res = await axios.post(`${backend}/mongo-nl-query`, {\n          prompt,\n          schema\n        });\n      }\n      setSql(res.data.sql || \"\");\n      setResult(res.data.result);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(\"Error: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleManualSubmit = async () => {\n    try {\n      let res;\n      if (dbType === \"mysql\") {\n        res = await axios.post(`${backend}/manual-query`, {\n          sql: manualSQL\n        });\n      } else if (dbType === \"postgres\") {\n        res = await axios.post(`${backend}/postgres-query`, {\n          sql: manualSQL\n        });\n      } else if (dbType === \"mongo\") {\n        res = await axios.post(`${backend}/mongo-query`, {\n          collection,\n          query: JSON.parse(mongoQuery)\n        });\n      }\n      setSql(manualSQL);\n      setResult(res.data.result);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      alert(\"Error: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const renderResult = () => {\n    if (!result) return null;\n    if (dbType === \"mongo\") {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(result[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: result.map((doc, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(doc).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: JSON.stringify(val)\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: result.columns.map((col, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: result.rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 39\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCA Universal DB Query Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Database:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: dbType,\n      onChange: e => setDbType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"mysql\",\n        children: \"MySQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"postgres\",\n        children: \"PostgreSQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"mongo\",\n        children: \"MongoDB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDDE0 Natural Language Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Schema (optional)\",\n      value: schema,\n      onChange: e => setSchema(e.target.value),\n      style: {\n        width: \"80%\",\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Prompt (e.g. show all users over 30)\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      style: {\n        width: \"80%\",\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePromptSubmit,\n      children: \"Submit Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: 30\n      },\n      children: \"\\u270D\\uFE0F Manual Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), dbType === \"mongo\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Collection\",\n        value: collection,\n        onChange: e => setCollection(e.target.value),\n        style: {\n          width: \"80%\",\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Query JSON (e.g. {\\\"age\\\": {\\\"$gt\\\": 25}})\",\n        value: mongoQuery,\n        onChange: e => setMongoQuery(e.target.value),\n        style: {\n          width: \"80%\",\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), dbType !== \"mongo\" && /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"SQL (e.g. SELECT * FROM table)\",\n      value: manualSQL,\n      onChange: e => setManualSQL(e.target.value),\n      style: {\n        width: \"80%\",\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleManualSubmit,\n      children: \"Run Manual Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), sql && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: 30\n        },\n        children: \"\\uD83E\\uDDFE SQL Used\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: sql\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"\\uD83D\\uDCCB Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), renderResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LOPpEITBX8cy8ttTJMng6FRC0nw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dbType","setDbType","schema","setSchema","prompt","setPrompt","manualSQL","setManualSQL","collection","setCollection","mongoQuery","setMongoQuery","result","setResult","sql","setSql","backend","handlePromptSubmit","res","post","data","err","_err$response","_err$response$data","alert","response","error","message","handleManualSubmit","query","JSON","parse","_err$response2","_err$response2$data","renderResult","border","cellPadding","children","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","doc","i","values","val","j","stringify","columns","col","rows","row","cell","style","padding","value","onChange","e","target","placeholder","width","marginBottom","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/netod/Desktop/mysql-mcp-project/frontend/src/App.js"],"sourcesContent":["// // // src/App.js\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n\n// // export default function App() {\n// //   const [schema, setSchema] = useState(\"\");\n// //   const [prompt, setPrompt] = useState(\"\");\n// //   const [response, setResponse] = useState(null);\n// //   const [sql, setSql] = useState(\"\");\n\n// //   const handleSubmit = async () => {\n// //     const res = await axios.post(\"http://localhost:8000/query\", { schema, prompt });\n// //     setSql(res.data.sql);\n// //     setResponse(res.data.result);\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Prompt to SQL</h2>\n// //       <input placeholder=\"Schema\" value={schema} onChange={(e) => setSchema(e.target.value)} />\n// //       <input placeholder=\"Prompt\" value={prompt} onChange={(e) => setPrompt(e.target.value)} />\n// //       <button onClick={handleSubmit}>Submit</button>\n// //       {sql && <pre>{sql}</pre>}\n// //       {response && <table><thead><tr>{response.columns.map(c => <th>{c}</th>)}</tr></thead><tbody>{response.rows.map(row => <tr>{row.map(cell => <td>{cell}</td>)}</tr>)}</tbody></table>}\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function App() {\n//   const [schema, setSchema] = useState(\"\");\n//   const [prompt, setPrompt] = useState(\"\");\n//   const [sql, setSql] = useState(\"\");\n//   const [manualSQL, setManualSQL] = useState(\"\");\n//   const [response, setResponse] = useState(null);\n\n//   const handlePromptSubmit = async () => {\n//     try {\n//       const res = await axios.post(\"http://localhost:8000/query\", {\n//         schema,\n//         prompt,\n//       });\n//       setSql(res.data.sql);\n//       setResponse(res.data.result);\n//     } catch (err) {\n//       alert(\"Error: \" + err.response?.data?.error || err.message);\n//     }\n//   };\n\n//   const handleManualSubmit = async () => {\n//     try {\n//       const res = await axios.post(\"http://localhost:8000/manual-query\", {\n//         sql: manualSQL,\n//       });\n//       setSql(manualSQL);\n//       setResponse(res.data.result);\n//     } catch (err) {\n//       alert(\"Error: \" + err.response?.data?.error || err.message);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2>üîç Prompt to SQL</h2>\n//       <input\n//         placeholder=\"Schema (e.g. users(id,name,email))\"\n//         value={schema}\n//         onChange={(e) => setSchema(e.target.value)}\n//         style={{ width: \"80%\", marginBottom: 10 }}\n//       />\n//       <br />\n//       <input\n//         placeholder=\"Enter your prompt\"\n//         value={prompt}\n//         onChange={(e) => setPrompt(e.target.value)}\n//         style={{ width: \"80%\", marginBottom: 10 }}\n//       />\n//       <br />\n//       <button onClick={handlePromptSubmit}>Submit Prompt</button>\n\n//       <h2 style={{ marginTop: 40 }}>üìù Run Manual SQL</h2>\n//       <input\n//         placeholder=\"Enter SQL (e.g. SELECT * FROM users)\"\n//         value={manualSQL}\n//         onChange={(e) => setManualSQL(e.target.value)}\n//         style={{ width: \"80%\", marginBottom: 10 }}\n//       />\n//       <br />\n//       <button onClick={handleManualSubmit}>Run SQL</button>\n\n//       {sql && (\n//         <div style={{ marginTop: 20 }}>\n//           <h4>Generated SQL:</h4>\n//           <pre>{sql}</pre>\n//         </div>\n//       )}\n\n//       {response && (\n//         <div>\n//           <h4>Result:</h4>\n//           <table border=\"1\" cellPadding=\"5\">\n//             <thead>\n//               <tr>\n//                 {response.columns.map((col, idx) => (\n//                   <th key={idx}>{col}</th>\n//                 ))}\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {response.rows.map((row, i) => (\n//                 <tr key={i}>\n//                   {row.map((cell, j) => (\n//                     <td key={j}>{cell}</td>\n//                   ))}\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function App() {\n  const [dbType, setDbType] = useState(\"mysql\");\n  const [schema, setSchema] = useState(\"\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [manualSQL, setManualSQL] = useState(\"\");\n  const [collection, setCollection] = useState(\"\");\n  const [mongoQuery, setMongoQuery] = useState(\"{}\");\n  const [result, setResult] = useState(null);\n  const [sql, setSql] = useState(\"\");\n\n  const backend = \"http://localhost:8000\";\n\n  const handlePromptSubmit = async () => {\n    try {\n      let res;\n      if (dbType === \"mysql\") {\n        res = await axios.post(`${backend}/query`, { prompt, schema });\n      } else if (dbType === \"postgres\") {\n        res = await axios.post(`${backend}/postgres-nl-query`, { prompt, schema });\n      } else if (dbType === \"mongo\") {\n        res = await axios.post(`${backend}/mongo-nl-query`, { prompt, schema });\n      }\n\n      setSql(res.data.sql || \"\");\n      setResult(res.data.result);\n    } catch (err) {\n      alert(\"Error: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleManualSubmit = async () => {\n    try {\n      let res;\n      if (dbType === \"mysql\") {\n        res = await axios.post(`${backend}/manual-query`, { sql: manualSQL });\n      } else if (dbType === \"postgres\") {\n        res = await axios.post(`${backend}/postgres-query`, { sql: manualSQL });\n      } else if (dbType === \"mongo\") {\n        res = await axios.post(`${backend}/mongo-query`, {\n          collection,\n          query: JSON.parse(mongoQuery)\n        });\n      }\n      setSql(manualSQL);\n      setResult(res.data.result);\n    } catch (err) {\n      alert(\"Error: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const renderResult = () => {\n    if (!result) return null;\n    if (dbType === \"mongo\") {\n      return (\n        <table border=\"1\" cellPadding=\"5\">\n          <thead>\n            <tr>\n              {Object.keys(result[0] || {}).map((key) => (\n                <th key={key}>{key}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {result.map((doc, i) => (\n              <tr key={i}>\n                {Object.values(doc).map((val, j) => (\n                  <td key={j}>{JSON.stringify(val)}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    } else {\n      return (\n        <table border=\"1\" cellPadding=\"5\">\n          <thead>\n            <tr>\n              {result.columns.map((col, i) => <th key={i}>{col}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {result.rows.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => <td key={j}>{cell}</td>)}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>üìä Universal DB Query Interface</h2>\n\n      <label>Select Database:</label>\n      <select value={dbType} onChange={(e) => setDbType(e.target.value)}>\n        <option value=\"mysql\">MySQL</option>\n        <option value=\"postgres\">PostgreSQL</option>\n        <option value=\"mongo\">MongoDB</option>\n      </select>\n\n      <hr />\n\n      <h3>üß† Natural Language Prompt</h3>\n      <input\n        placeholder=\"Schema (optional)\"\n        value={schema}\n        onChange={(e) => setSchema(e.target.value)}\n        style={{ width: \"80%\", marginBottom: 8 }}\n      />\n      <br />\n      <input\n        placeholder=\"Prompt (e.g. show all users over 30)\"\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n        style={{ width: \"80%\", marginBottom: 8 }}\n      />\n      <br />\n      <button onClick={handlePromptSubmit}>Submit Prompt</button>\n\n      <h3 style={{ marginTop: 30 }}>‚úçÔ∏è Manual Query</h3>\n\n      {dbType === \"mongo\" && (\n        <>\n          <input\n            placeholder=\"Collection\"\n            value={collection}\n            onChange={(e) => setCollection(e.target.value)}\n            style={{ width: \"80%\", marginBottom: 8 }}\n          />\n          <br />\n          <input\n            placeholder='Query JSON (e.g. {\"age\": {\"$gt\": 25}})'\n            value={mongoQuery}\n            onChange={(e) => setMongoQuery(e.target.value)}\n            style={{ width: \"80%\", marginBottom: 8 }}\n          />\n        </>\n      )}\n\n      {dbType !== \"mongo\" && (\n        <input\n          placeholder=\"SQL (e.g. SELECT * FROM table)\"\n          value={manualSQL}\n          onChange={(e) => setManualSQL(e.target.value)}\n          style={{ width: \"80%\", marginBottom: 8 }}\n        />\n      )}\n\n      <br />\n      <button onClick={handleManualSubmit}>Run Manual Query</button>\n\n      {sql && (\n        <>\n          <h4 style={{ marginTop: 30 }}>üßæ SQL Used</h4>\n          <pre>{sql}</pre>\n        </>\n      )}\n\n      <h4 style={{ marginTop: 20 }}>üìã Result</h4>\n      {renderResult()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}